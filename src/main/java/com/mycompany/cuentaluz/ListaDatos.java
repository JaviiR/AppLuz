/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.cuentaluz;

import javax.swing.table.DefaultTableModel;

import com.mycompany.cuentaluz.Entidades.Luz;
import com.mycompany.cuentaluz.conexion.Conexion;
import com.mycompany.cuentaluz.utilidades.EstadoRenderer;
import com.mycompany.cuentaluz.utilidades.ImageRenderer;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;

import javax.swing.ImageIcon;

import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author ALEX
 */
public class ListaDatos extends javax.swing.JFrame {

    Conexion conexion;

    /**
     * Creates new form ListaDatos
     */
    public ListaDatos() {
        initComponents();
        setLocationRelativeTo(null);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        CambiosIniciales();
        FuncionesTablaLista();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblLista = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        tblLista.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblLista);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 667, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblLista;
    // End of variables declaration//GEN-END:variables

    private void CambiosIniciales() {
        try {
            UIManager.setLookAndFeel("javax.swing.plaf.metal.MetalLookAndFeel");
        } catch (Exception e) {
            e.printStackTrace();
        }

        tblLista.setEnabled(false);
        conexion = new Conexion();
        CargarLista();

    }

    private void CargarLista() {
        DefaultTableModel modelo = new DefaultTableModel();
        String[] titulos = new String[7];
        titulos[0] = "mes";
        titulos[1] = "a単o";
        titulos[2] = "principal";
        titulos[3] = "secundario";
        titulos[4] = "Total";
        titulos[5] = "estado";
        titulos[6] = "";

        modelo.setColumnIdentifiers(titulos);
        for (Luz objeto : conexion.listaDatos()) {
            Object[] array = new Object[7];
            switch (objeto.getMes()) {
                case 1:
                    array[0] = "Enero";
                    break;
                case 2:
                    array[0] = "Febrero";
                    break;
                case 3:
                    array[0] = "Marzo";
                    break;
                case 4:
                    array[0] = "Abril";
                    break;
                case 5:
                    array[0] = "Mayo";
                    break;
                case 6:
                    array[0] = "Junio";
                    break;
                case 7:
                    array[0] = "Julio";
                    break;
                case 8:
                    array[0] = "Agosto";
                    break;
                case 9:
                    array[0] = "Septiembre";
                    break;
                case 10:
                    array[0] = "Octubre";
                    break;
                case 11:
                    array[0] = "Noviembre";
                    break;
                case 12:
                    array[0] = "Diciembre";
                    break;

            }

            array[1] = objeto.getA単o();
            array[2] = objeto.getPrincipal();
            array[3] = objeto.getSecundario();
            array[4] = "S/." + objeto.getTotal();
            array[5] = objeto.getEstado();
            array[6] = new ImageIcon(Principal.class.getResource("/imgs/delete.png"));
            modelo.addRow(array);
        }
        tblLista.setModel(modelo);

        tblLista.setRowHeight(20);

        tblLista.getColumnModel().getColumn(6).setCellRenderer(new ImageRenderer(15, 15));
        tblLista.getColumnModel().getColumn(5).setCellRenderer(new EstadoRenderer());
        
        tblLista.setBackground(Color.WHITE);
    }

    private void FuncionesTablaLista() {
        tblLista.addMouseListener(new MouseAdapter() {

            @Override
            public void mouseExited(MouseEvent e) {

                setCursor(new Cursor(Cursor.DEFAULT_CURSOR));

            }

            @Override
            public void mouseClicked(MouseEvent e) {
                
                if (e.getClickCount() == 1) {
                    Point point = e.getPoint();
                    int row = tblLista.rowAtPoint(point);
                    int column = tblLista.columnAtPoint(point);
                    System.out.println("------------------------------------------");
                    System.out.println("Row: "+row);
                    System.out.println("Column: "+column);
                    System.out.println("------------------------------------------");
                    if (column == 6) {
                        String mes = null;//cambiar el mes que esta en letras a numero puede ser con while 
                        switch (tblLista.getValueAt(row, 0).toString()) {
                            case "Enero":
                                mes = "1";
                                break;
                            case "Febrero":
                                mes = "2";
                                break;
                            case "Marzo":
                                mes = "3";
                                break;
                            case "Abril":
                                mes = "4";
                                break;
                            case "Mayo":
                                mes = "5";
                                break;
                            case "Junio":
                                mes = "6";
                                break;
                            case "Julio":
                                mes = "7";
                                break;
                            case "Agosto":
                                mes = "8";
                                break;
                            case "Septiembre":
                                mes = "9";
                                break;
                            case "Octubre":
                                mes = "10";
                                break;
                            case "Noviembre":
                                mes = "11";
                                break;
                            case "Diciembre":
                                mes = "12";
                                break;

                        }
                        int a単o = Integer.parseInt(tblLista.getValueAt(row, 1).toString());
                        int validar = JOptionPane.showConfirmDialog(null, "Realmente quiere eliminar el registro?", "ADVERTENCIA!", 0, JOptionPane.QUESTION_MESSAGE, null);
                        if (validar == 0) {
                            conexion.EliminarRegistro(Integer.parseInt(mes), a単o);
                            CargarLista();
                        } else {
                            System.out.println("no quiso eliminar el registro");
                        }

                    }else{
                        
                    }
                    if (column == 5) {
                        int EstadoOriginal = Integer.parseInt(tblLista.getValueAt(row, 5).toString());
                        String mes = null;//cambiar el mes que esta en letras a numero puede ser con while 
                        switch (tblLista.getValueAt(row, 0).toString()) {
                            case "Enero":
                                mes = "1";
                                break;
                            case "Febrero":
                                mes = "2";
                                break;
                            case "Marzo":
                                mes = "3";
                                break;
                            case "Abril":
                                mes = "4";
                                break;
                            case "Mayo":
                                mes = "5";
                                break;
                            case "Junio":
                                mes = "6";
                                break;
                            case "Julio":
                                mes = "7";
                                break;
                            case "Agosto":
                                mes = "8";
                                break;
                            case "Septiembre":
                                mes = "9";
                                break;
                            case "Octubre":
                                mes = "10";
                                break;
                            case "Noviembre":
                                mes = "11";
                                break;
                            case "Diciembre":
                                mes = "12";
                                break;

                        }
                        int a単o = Integer.parseInt(tblLista.getValueAt(row, 1).toString());
                        if (EstadoOriginal == Conexion.ESTADO_CANCELADO) {
                            conexion.CambiarEstado(Conexion.ESTADO_NO_CANCELADO, Integer.parseInt(mes), a単o);
                        } else {
                            conexion.CambiarEstado(Conexion.ESTADO_CANCELADO, Integer.parseInt(mes), a単o);
                        }
                        CargarLista();

                    } else {

                    }

                } else if (e.getClickCount() > 1) {

                } else {

                }
            }

        });

        tblLista.addMouseMotionListener(new MouseMotionAdapter() {
            @Override
            public void mouseMoved(MouseEvent e) {
                Point point = e.getPoint();
                int row = tblLista.rowAtPoint(point);
                int column = tblLista.columnAtPoint(point);
                if ((row >= 0 && column == 6) || (row >= 0 && column == 5)) {
                    setCursor(new Cursor(Cursor.HAND_CURSOR));
                } else {
                    setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
                }
            }

        });

    }

}
